apiVersion: helm.operator-sdk/v1alpha1
kind: StackstormHa
metadata:
  name: example-stackstormha
spec:
  # Default values copied from <project_dir>/helm-charts/stackstorm-ha/values.yaml
  
  enterprise:
    enabled: false
    license: ""
    rbac:
      assignments:
        st2admin.yaml: |
          ---
          username: st2admin
          roles:
            - system_admin
        stanley.yaml: |
          ---
          username: stanley
          roles:
            - admin
      mappings: null
      roles:
        sample.yaml: |
          # sample RBAC role file, see https://docs.stackstorm.com/rbac.html#defining-roles-and-permission-grants
          ---
          name: "sample"
          description: "Example Role which contains no permission grants and serves for demonstration purposes"
  etcd-operator:
    customResources:
      createEtcdClusterCRD: true
    deployments:
      backupOperator: false
      restoreOperator: false
    enabled: true
  external-dns:
    aws:
      zoneType: public
    domainFilters: []
    enabled: false
  image:
    pullPolicy: Always
    repository: ""
  ingress:
    annotations: {}
    enabled: false
    hosts: []
    tls: []
  mongodb-ha:
    auth:
      adminPassword: XeL5Rxwj7F0Wt43tFZVTN7H8Sg5XDHmK
      adminUser: admin
      enabled: true
      key: 82PItDpqroti5RngOA7UqbHH7c6bFUwy
    enabled: true
    image:
      tag: "4.0"
    resources: {}
  rabbitmq-ha:
    definitions:
      policies: '{"vhost":"/","name":"ha","pattern":"", "definition":{"ha-mode":"all","ha-sync-mode":"automatic","ha-sync-batch-size":10}}'
    enabled: true
    persistentVolume:
      enabled: true
    rabbitmqPassword: 9jS+w1u07NbHtZke1m+jW4Cj
    rabbitmqUsername: admin
    rabbitmqVhost: /
    resources: {}
  secrets:
    st2:
      password: Ch@ngeMe
      ssh_key: |-
        -----BEGIN RSA PRIVATE KEY-----
        MIIEowIBAAKCAQEAs73kblN3XfLR6tYsHRHyX/aQKx4amcNjT+E+2ufwqkiINDyA
        CGim0Z4WFOEO6UtZApeOlUehp2MEFGFpl2u8vUC1b7AsWaImB4ywMIPOFblqaEag
        DskrFp7FOggqZFWX7NwVZpm/KkvCw/fCehnxuv+za+hUtg4Qiv86qXShrlsn98B7
        64Aq27oxkvhRU2OkDUP/wPNQnXzIZxfFYSvS7rGzKrswdZfWysscIUor4a+7GahM
        yq8PGD6qp2wkiL7wFarZerS2Sq3M06Y89yzppCoPYI6kaEPuqrjSYZvh38CAVbGG
        SgPv3CFgR1N3BsBEAx7OF+40R58C+3ldH8e1tQIDAQABAoIBAQCN7137YR3Zqm3p
        q8aaDhn/fYzK/7KxyYEbCxu/cXiyfyRPW5cfDMTuso9tXWuQ/lcDnPqTF0WoEKCg
        F2xyjjk0mWytDcl33nt5areXF/4dWZWVUnACPQkxi57i/J+9K3oVKJYdtzsmAz2B
        0pxYHzSsHk9o3sZGHUUi/fks51TlgPNgOP8hf7/K9w9+FSE26geqjddqWwQbbStI
        rDc3ZPMcGI4E5DuGmnrxWf4omUqScTB+bvUgN+WC02v1Bj4HaAX7PlLCUZMuTk3S
        BcG4v7qiglxVYdBjtHNwtg1YAoVYh6sXckxqi1XudhoRXGlgYtyrcW0mWnnB4hIQ
        vy7//uABAoGBANw8H1h93U1HNsqfIa1Ys3u6qZdHByHvA8e7Jk6GEFUEOAQSyxZ+
        0RbFWC4knuQL+YklqeDNCXekwVEvVenf2lhZ4rHNbmv/9pWhq7sQcDOQPi5nVxJl
        bkQoQkeNGeH8KPF1E2RsfJ8uU3NfD00yMFrNaeBUIlY44ABMOQSJREq1AoGBANDu
        V0IV1BahqEW5mmnTdHLG6+tiSQdutrQv4hxBL59PhwyeMvpzFgwkNmymAZMLl40D
        Y/0wg2lVr7Fb+peCrLpiNMEPWv/a38IEVTDm7YcsHZayEsc1vdjdMoZ8k5VNi25F
        +lvQ/CxDNqJGTNEBBYmb5QHopBh8YowwIrT0yZ8BAoGAFYtAGbz+SA/+WSXl+noh
        3Kmu62CEXxptiT1Siv3sXRSzkhpwiXvQYmTdsm3cqTxOpc7sZlRIZ87TJmj2A5Hl
        Xx0z4ubQtXntmkedcAg0oaarnoh3aRJJDhvOGAfCj2vGaZBlXD6MllnGyhNzgL63
        IjrT76DrVvnrV7wdG8d9yb0CgYAuQFT4wDRPPkIuDURtoO3qarbXSM654nx3rxHz
        B0svjT9sP6kxYEDFN08FBkra7noCMXn1FsRAkUNvk9kJqVfresoK4wdWFHHsVWE2
        jiiO/+kc7xbRGsiINY91ziYtqxjutHcT1FO+yLJTghSHQB6ls+kiXwnUkdSPDCji
        vj3UAQKBgE19oSdfKbpKTyHu5rs+lN/KictDuMrqAriWODCygZ1/X1J1zpqvpUbt
        WE8BWLQ1vBV6c7V4Q0Wp6LuTnNnvu/lvVugJW/TbrzFw6CFe5fEISmIHAMnqVz8x
        OdOJyinSM1svoBGnYfyAqINKrqCSGSKmprlMo0Ma3erI7SuojWBS
        -----END RSA PRIVATE KEY-----
      username: st2admin
  serviceAccount:
    create: true
    serviceAccountAnnotations: {}
    serviceAccountName: null
  st2:
    apikeys: null
    config: |
      [api]
      allow_origin = '*'
    keyvalue: null
    packs:
      configs:
        core.yaml: |
          ---
          # example core pack config yaml
      image:
        name: st2packs
        pullPolicy: Always
        tag: latest
      sensors:
      - affinity: {}
        annotations: {}
        livenessProbe: {}
        name: null
        nodeSelector: {}
        readinessProbe: {}
        resources: {}
        serviceAccount:
          attach: false
        tolerations: []
  st2actionrunner:
    affinity: {}
    annotations: {}
    hostAliases: []
    nodeSelector: {}
    replicas: 5
    resources: {}
    serviceAccount:
      attach: false
    tolerations: []
  st2api:
    affinity: {}
    nodeSelector: {}
    replicas: 2
    resources: {}
    serviceAccount:
      attach: false
    tolerations: []
  st2auth:
    affinity: {}
    nodeSelector: {}
    replicas: 2
    resources: {}
    serviceAccount:
      attach: false
    tolerations: []
  st2chatops:
    affinity: {}
    enabled: false
    env:
      HUBOT_ADAPTER: slack
      HUBOT_SLACK_TOKEN: xoxb-CHANGE-ME-PLEASE
    image: {}
    nodeSelector: {}
    resources:
      requests:
        cpu: 5m
        memory: 50Mi
    serviceAccount:
      attach: false
    tolerations: []
  st2garbagecollector:
    affinity: {}
    nodeSelector: {}
    replicas: 1
    resources: {}
    serviceAccount:
      attach: false
    tolerations: []
  st2notifier:
    affinity: {}
    nodeSelector: {}
    replicas: 2
    resources: {}
    serviceAccount:
      attach: false
    tolerations: []
  st2rulesengine:
    affinity: {}
    nodeSelector: {}
    replicas: 2
    resources: {}
    serviceAccount:
      attach: false
    tolerations: []
  st2scheduler:
    affinity: {}
    nodeSelector: {}
    replicas: 2
    resources: {}
    serviceAccount:
      attach: false
    tolerations: []
  st2stream:
    affinity: {}
    nodeSelector: {}
    replicas: 2
    resources: {}
    serviceAccount:
      attach: false
    tolerations: []
  st2timersengine:
    affinity: {}
    nodeSelector: {}
    resources: {}
    serviceAccount:
      attach: false
    tolerations: []
  st2web:
    affinity: {}
    nodeSelector: {}
    replicas: 2
    resources:
      limits:
        memory: 100Mi
      requests:
        cpu: 50m
        memory: 25Mi
    service:
      annotations: {}
      hostname: ""
      type: NodePort
    serviceAccount:
      attach: false
    tolerations: []
  st2workflowengine:
    affinity: {}
    nodeSelector: {}
    replicas: 2
    resources: {}
    serviceAccount:
      attach: false
    tolerations: []
  
